{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Output, EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Pregunta } from 'src/app/models/pregunta';\nimport { Respuesta } from 'src/app/models/respuesta';\n;\nexport class NuevaPreguntaComponent {\n  constructor(fb, toastr) {\n    this.fb = fb;\n    this.toastr = toastr;\n    this.rtaCorrecta = 0;\n    this.enviarPregunta = new EventEmitter();\n    this.nuevaPregunta = this.fb.group({\n      titulo: ['', Validators.required],\n      respuestas: this.fb.array([])\n    });\n  }\n  ngOnInit() {\n    this.agregarRespuestasPorDefecto();\n  }\n  // Devuelve FormArray de respuestas\n  get getRespuestas() {\n    return this.nuevaPregunta.get('respuestas');\n  }\n  // Agregar respuesta al array\n  agregarRespuesta() {\n    this.getRespuestas.push(this.fb.group({\n      descripcion: ['', Validators.required],\n      esCorrecta: 0\n    }));\n  }\n  agregarRespuestasPorDefecto() {\n    this.agregarRespuesta();\n    this.agregarRespuesta();\n  }\n  eliminarRespuesta(index) {\n    if (this.getRespuestas.length === 2) {\n      this.toastr.error('Como minimo la pregunta debe contener 2 respuestas', 'Error!');\n    } else {\n      this.getRespuestas.removeAt(index);\n    }\n  }\n  setRespuestaValida(index) {\n    this.rtaCorrecta = index;\n  }\n  agregarPregunta() {\n    // Obtenemos el titulo de la pregunta\n    const descripcionPregunta = this.nuevaPregunta.get('titulo').value;\n    // Obtenemos el array de respuestas\n    const arrayRespuestas = this.nuevaPregunta.get('respuestas').value;\n    // Creamos un array de respuestas\n    const arrayRta = [];\n    arrayRespuestas.forEach((element, index) => {\n      const respuesta = new Respuesta(element.descripcion, false);\n      if (index === this.rtaCorrecta) {\n        respuesta.esCorrecta = true;\n      }\n      arrayRta.push(respuesta);\n    });\n    const pregunta = new Pregunta(descripcionPregunta, arrayRta);\n    this.enviarPregunta.emit(pregunta);\n    this.reset();\n  }\n  reset() {\n    this.rtaCorrecta = 0;\n    this.nuevaPregunta.reset();\n    this.getRespuestas.clear();\n    this.agregarRespuestasPorDefecto();\n  }\n}\n__decorate([Output()], NuevaPreguntaComponent.prototype, \"enviarPregunta\", void 0);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}