{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Pregunta } from 'src/app/models/pregunta';\nimport { Respuesta } from 'src/app/models/respuesta';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/common\";\nfunction NuevaPreguntaComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1, \" La pregunta \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"es requerida\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NuevaPreguntaComponent_div_4_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1, \" La respuesta \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \" es requerida\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NuevaPreguntaComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9);\n    i0.ɵɵelement(2, \"input\", 10);\n    i0.ɵɵelementStart(3, \"div\", 11)(4, \"div\", 12)(5, \"input\", 13);\n    i0.ɵɵlistener(\"change\", function NuevaPreguntaComponent_div_4_Template_input_change_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r3 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.setRespuestaValida(i_r3));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"span\", 14);\n    i0.ɵɵlistener(\"click\", function NuevaPreguntaComponent_div_4_Template_span_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r3 = restoredCtx.index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.eliminarRespuesta(i_r3));\n    });\n    i0.ɵɵtext(7, \" delete \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(8, NuevaPreguntaComponent_div_4_span_8_Template, 4, 0, \"span\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", i_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"placeholder\", \"Respuesta \", i_r3 + 1, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", i_r3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", item_r2.get(\"descripcion\").hasError(\"required\") && item_r2.get(\"descripcion\").touched);\n  }\n}\nlet NuevaPreguntaComponent = /*#__PURE__*/(() => {\n  class NuevaPreguntaComponent {\n    constructor(fb, toastr) {\n      this.fb = fb;\n      this.toastr = toastr;\n      this.rtaCorrecta = 0;\n      this.enviarPregunta = new EventEmitter();\n      this.nuevaPregunta = this.fb.group({\n        titulo: ['', Validators.required],\n        respuestas: this.fb.array([])\n      });\n    }\n    ngOnInit() {\n      this.agregarRespuestasPorDefecto();\n    }\n    // Devuelve FormArray de respuestas\n    get getRespuestas() {\n      return this.nuevaPregunta.get('respuestas');\n    }\n    // Agregar respuesta al array\n    agregarRespuesta() {\n      this.getRespuestas.push(this.fb.group({\n        descripcion: ['', Validators.required],\n        esCorrecta: 0\n      }));\n    }\n    agregarRespuestasPorDefecto() {\n      this.agregarRespuesta();\n      this.agregarRespuesta();\n    }\n    eliminarRespuesta(index) {\n      if (this.getRespuestas.length === 2) {\n        this.toastr.error('Como minimo la pregunta debe contener 2 respuestas', 'Error!');\n      } else {\n        this.getRespuestas.removeAt(index);\n      }\n    }\n    setRespuestaValida(index) {\n      this.rtaCorrecta = index;\n    }\n    agregarPregunta() {\n      // Obtenemos el titulo de la pregunta\n      const descripcionPregunta = this.nuevaPregunta.get('titulo').value;\n      // Obtenemos el array de respuestas\n      const arrayRespuestas = this.nuevaPregunta.get('respuestas').value;\n      // Creamos un array de respuestas\n      const arrayRta = [];\n      arrayRespuestas.forEach((element, index) => {\n        const respuesta = new Respuesta(element.descripcion, false);\n        if (index === this.rtaCorrecta) {\n          respuesta.esCorrecta = true;\n        }\n        arrayRta.push(respuesta);\n      });\n      const pregunta = new Pregunta(descripcionPregunta, arrayRta);\n      this.enviarPregunta.emit(pregunta);\n      this.reset();\n    }\n    reset() {\n      this.rtaCorrecta = 0;\n      this.nuevaPregunta.reset();\n      this.getRespuestas.clear();\n      this.agregarRespuestasPorDefecto();\n    }\n  }\n  NuevaPreguntaComponent.ɵfac = function NuevaPreguntaComponent_Factory(t) {\n    return new (t || NuevaPreguntaComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ToastrService));\n  };\n  NuevaPreguntaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NuevaPreguntaComponent,\n    selectors: [[\"app-nueva-pregunta\"]],\n    outputs: {\n      enviarPregunta: \"enviarPregunta\"\n    },\n    decls: 11,\n    vars: 4,\n    consts: [[3, \"formGroup\"], [1, \"form-group\", \"input-group-lg\"], [\"type\", \"text\", \"placeholder\", \"Ingrese Pregunta\", \"formControlName\", \"titulo\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"formArrayName\", \"respuestas\", 4, \"ngFor\", \"ngForOf\"], [1, \"material-icons\", \"add-icon\", 3, \"click\"], [1, \"btn\", \"btn-primary\", \"float-right\", 3, \"disabled\", \"click\"], [1, \"text-danger\"], [\"formArrayName\", \"respuestas\"], [1, \"input-group\", 2, \"padding-top\", \"10px\", 3, \"formGroupName\"], [\"type\", \"text\", \"formControlName\", \"descripcion\", 1, \"form-control\", 3, \"placeholder\"], [1, \"input-group-prepend\"], [1, \"input-group-text\"], [\"type\", \"radio\", \"name\", \"esCorrecta\", \"formControlName\", \"esCorrecta\", 3, \"value\", \"change\"], [1, \"material-icons\", \"delete-icon\", 3, \"click\"]],\n    template: function NuevaPreguntaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"input\", 2);\n        i0.ɵɵtemplate(3, NuevaPreguntaComponent_span_3_Template, 4, 0, \"span\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, NuevaPreguntaComponent_div_4_Template, 9, 4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"span\", 5);\n        i0.ɵɵlistener(\"click\", function NuevaPreguntaComponent_Template_span_click_5_listener() {\n          return ctx.agregarRespuesta();\n        });\n        i0.ɵɵtext(6, \" add \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"br\")(8, \"br\");\n        i0.ɵɵelementStart(9, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function NuevaPreguntaComponent_Template_button_click_9_listener() {\n          return ctx.agregarPregunta();\n        });\n        i0.ɵɵtext(10, \"Agregar\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.nuevaPregunta);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.nuevaPregunta.get(\"titulo\").hasError(\"required\") && ctx.nuevaPregunta.get(\"titulo\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getRespuestas.controls);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", ctx.nuevaPregunta.invalid);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n    styles: [\".delete-icon[_ngcontent-%COMP%]{font-size:39px;cursor:pointer;color:#ce4b4b}.add-icon[_ngcontent-%COMP%]{font-size:39px;cursor:pointer;float:right}\"]\n  });\n  return NuevaPreguntaComponent;\n})();\nexport { NuevaPreguntaComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}